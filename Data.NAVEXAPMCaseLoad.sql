-- There will be duplicate cases with 1+ APMs (ETHICSPOINT_ASSIGNEE) = each APM will get credit for case
-- Only the most recent case status will be shown. Lifetime case status not provided. 
SELECT  
	n.CASE_NUMBER
	,n.[STATUS]
	,CASE
		WHEN
		n.[STATUS] = 'Closed' THEN 'Closed Case'
			ELSE 'Open Case'
		END AS OPEN_vs_CLOSED_CASE
	,s.CASE_TYPE
	,s.INTAKE_METHOD
	,s.CASE_CREATOR
	,a.CASE_OWNER
	,n.PRIMARY_ISSUE
	,n.PRIMARY_ISSUE_SUBCATEGORY_1
	,n.ASSIGNEE AS CASEDATA_ASSIGNEE
	,a.ETHICSPOINT_ASSIGNEE
	,a.EMP_NUMBER AS APM_Emp_Num
--	,emp.JOB_TITLE AS ASSIGNEE_JOB_TITLE
--	,apm.POC_APM_EMP_NUM AS APM_Emp_Num
	,n.BRANCH_NUMBER
	,CAST(
		REPLACE(
			REPLACE(
				REPLACE(n.BRANCH_NUMBER
					,'Store','')
				,' ','')
			,'-','')
		AS int) AS STORE_NUM
	,n.OPENED AS OPENED_DATE
	,s.FIRST_REVIEWED AS FIRST_REVIEWED_DATE
	,n.LAST_MODIFIED AS DATE_LAST_MODIFIED
	,n.CLOSED AS DATE_CLOSED
	,n.DATE_TIME_INSERTED
FROM (
-- Subquery will get the most current case status
	-- this version is much faster than running without subquery and going directly from NAVEX_ETHICSPOINT_CASE_DATA
	SELECT 
		cd.*
	FROM 
		(SELECT 
			CASE_NUMBER
			,MAX( LAST_MODIFIED ) AS MAX_LAST_MODIFIED
		FROM i2_data.dbo.NAVEX_ETHICSPOINT_CASE_DATA
		GROUP BY CASE_NUMBER
		) mc
	LEFT OUTER JOIN i2_data.dbo.NAVEX_ETHICSPOINT_CASE_DATA cd
		ON mc.CASE_NUMBER = cd.CASE_NUMBER AND mc.MAX_LAST_MODIFIED = cd.LAST_MODIFIED 
	) n
LEFT OUTER JOIN i2_data.dbo.NAVEX_ETHICSPOINT_SUPPLEMENTAL_CASE_DATA s
	ON n.CASE_NUMBER = s.CASE_NUMBER
LEFT OUTER JOIN i2_data.dbo.NAVEX_ETHICSPOINT_ASSIGNEE a
	ON a.CASE_NUMBER = s.CASE_NUMBER
--LEFT OUTER JOIN i2_data.dbo.NAVEX_ETHICSPOINT_PARTICIPANT p
--	ON s.CASE_NUMBER = p.CASE_NUMBER
--LEFT OUTER JOIN i2_Data.dbo.ATLAS_CONTACTS apm
--	ON a.EMP_NUMBER = apm.POC_APM_EMP_NUM
--LEFT OUTER JOIN i2_data.dbo.EISB_LP_FEED emp
--	ON a.EMP_NUMBER = emp.EMP_NUMBER
WHERE
	n.OPENED BETWEEN '2023-07-01 00:00:00.001' AND GETDATE()
	AND n.BRANCH_NUMBER LIKE '%Store%'
	AND n.BRANCH_NUMBER IS NOT NULL
--	AND emp.COMPENSATION_CODE = 29046
	AND a.EMP_NUMBER IN (
		SELECT EMP_NUMBER
		FROM i2_data.dbo.EISB_LP_FEED
		WHERE
			COMPENSATION_CODE = 29046
			) 
GROUP BY
	n.CASE_NUMBER,n.[STATUS],s.CASE_TYPE,s.INTAKE_METHOD,s.CASE_CREATOR,a.CASE_OWNER,n.PRIMARY_ISSUE,n.PRIMARY_ISSUE_SUBCATEGORY_1
	,n.ASSIGNEE,a.ETHICSPOINT_ASSIGNEE,a.EMP_NUMBER,n.BRANCH_NUMBER,n.OPENED,s.FIRST_REVIEWED,n.LAST_MODIFIED,n.CLOSED,n.DATE_TIME_INSERTED
--	,n.LOCATION_ADDRESS,n.LOCATION_CITY,n.LOCATION_STATE_PROVINCE,n.REGION,n.REGION_NUMBER,n.AREA_NAME,n.AREA_NUMBER,p.[NAME],p.HRID,p.RELATIONSHIP,p.[ROLE],s.NAVEX_DATE_LAST_MODIFIED,emp.JOB_TITLE,apm.POC_APM_EMP_NUM
ORDER BY 
	n.CASE_NUMBER
/*	,CASE
		WHEN n.[STATUS] = 'Unreviewed' THEN 1
		WHEN n.[STATUS] = 'In Process' THEN 2
		WHEN n.[STATUS] = 'Ready for Review' THEN 3
		WHEN n.[STATUS] = 'Duplicate Case' THEN 4
		WHEN n.[STATUS] = 'Closed' THEN 5
			ELSE 9
		END
	,n.LAST_MODIFIED
*/	;

-- Comments
SELECT DISTINCT
	comm.CASE_NUMBER
	,comm.DETAILS AS Comments
	,comm.OPENED AS OPENED_DATE
FROM i2_data.dbo.NAVEX_ETHICSPOINT_CASE_DATA comm
WHERE
	comm.OPENED BETWEEN '2023-07-01 00:00:00.001' AND GETDATE()
ORDER BY
	comm.CASE_NUMBER
	;

-- List of current APMs = POC for store or everything that is labeled a store
	-- Terminated APMs not included
SELECT 
	apm.POC_APM_EMP_NUM
	,emp.FIRST_NAME
	,emp.LAST_NAME
	,emp.FIRST_NAME + ' ' + emp.LAST_NAME AS APM_FULL_NAME
	,emp.JOB_TITLE
	,emp.WORK_EMAIL_ADDRESS
FROM (
	SELECT DISTINCT
		POC_APM_EMP_NUM
	FROM i2_Data.dbo.ATLAS_CONTACTS 
	) apm
LEFT JOIN i2_Data.dbo.EISB_LP_FEED emp
	ON apm.POC_APM_EMP_NUM = emp.EMP_NUMBER
WHERE
	apm.POC_APM_EMP_NUM IS NOT NULL
	AND emp.EMP_NUMBER IS NOT NULL
	;

-- Location: Stores / Districts / Area / Region
	-- ATLAS_CONTACTS (store list = NODE_ADDRESS) being used since focus is on list of current APMs
SELECT
	s.LOC_NUM AS STORE_NUMBER
	,CONCAT(FORMAT(s.LOC_NUM,'00000'),' - ',s.CITY,' ,',s.ADDRESS_LINE_1,' ,',s.[STATE]) AS Store
	,d.LOC_NUM AS DISTRICT_NUMBER
	,CONCAT(d.[NAME], ' (', d.LOC_NUM, ')' ) AS DISTRICT
	,a.LOC_NUM AS AREA_NUMBER
	,CONCAT(a.[NAME], ' (', a.LOC_NUM, ')' ) AS AREA
	,r.LOC_NUM AS REGION_NUMBER
	,CONCAT(r.[NAME], ' (', r.LOC_NUM, ')' ) AS REGION
FROM i2_Data.dbo.ATLAS_CONTACTS apm
LEFT OUTER JOIN i2_Data.dbo.LOCATION s
	ON apm.NODE_ADDRESS = s.NODE_ADDRESS
LEFT OUTER JOIN i2_Data.dbo.LOCATION d
	ON s.PARENT_LOCATION_NUMBER = d.LOC_NUM AND s.PARENT_LOCATION_TYPE_CODE = d.LOC_TYPE_CODE
LEFT OUTER JOIN i2_Data.dbo.LOCATION a
	ON d.PARENT_LOCATION_NUMBER = a.LOC_NUM AND d.PARENT_LOCATION_TYPE_CODE = a.LOC_TYPE_CODE
LEFT OUTER JOIN i2_Data.dbo.LOCATION r
	ON a.PARENT_LOCATION_NUMBER = r.LOC_NUM AND a.PARENT_LOCATION_TYPE_CODE = r.LOC_TYPE_CODE
WHERE
	s.LOC_TYPE_CODE = 'S'
	AND apm.POC_APM_EMP_NUM IS NOT NULL
	;